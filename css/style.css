h4 {
	font-family: serif;
}
.game .button, .game p {
	margin-bottom: 0;
}
.total-game-time {
	margin: 0.1875em 0;
}
.button.large {
	font-size: 16px;
	font-weight: normal;
}
a.button {
	min-width: 170px;
	min-height: 100px;
	padding: 1.4em 1em !important;
}

.padding-top {
	padding-top: 1em;
}

button {
	width: 190px;
	height: 160px;
	display: block;
}

button:hover {
	opacity: 0.8;
}


button.baratheon { 		background-image: url('../img/tiles/Baratheon.jpg'); }
button.baratheon:hover { 	background-image: url('../img/tiles/Baratheon-rollover.jpg'); }
button.lannister { 		background-image: url('../img/tiles/Lannister.jpg'); }
button.lannister:hover { 	background-image: url('../img/tiles/Lannister-rollover.jpg'); }
button.stark { 		background-image: url('../img/tiles/Stark.jpg'); }
button.stark:hover { 	background-image: url('../img/tiles/Stark-rollover.jpg'); }
button.greyjoy { 		background-image: url('../img/tiles/Greyjoy.jpg'); }
button.greyjoy:hover { 	background-image: url('../img/tiles/Greyjoy-rollover.jpg'); }
button.martell { 		background-image: url('../img/tiles/Martell.jpg'); }
button.martell:hover { 	background-image: url('../img/tiles/Martell-rollover.jpg'); }
button.tyrell { 		background-image: url('../img/tiles/Tyrell.jpg'); }
button.tyrell:hover { 	background-image: url('../img/tiles/Tyrell-rollover.jpg'); }

button.martell, .button.martell, button.supply, .button.supply {
    background-color: #C35F2E;
    border: none;
    color: black;
}
button.martell:hover, button.martell:focus, .button.martell:hover, .button.martell:focus, .button.martell.active,
button.supply:hover, button.supply:focus, .button.supply:hover, .button.supply:focus, .button.supply.active {	
	background-color: #B3461D;
}
button.martell:hover, button.martell:focus, .button.martell:hover, .button.martell:focus, .button.martell.active,
button.supply:hover, button.supply:focus, .button.supply:hover, .button.supply:focus, .button.supply.active {
	color: black;
}

button.greyjoy, .button.greyjoy, button.placing, .button.placing {
	background-color: #333;
	border: none;
	color: white;
}
button.greyjoy:hover, button.greyjoy:focus, .button.greyjoy:hover, .button.greyjoy:focus, .button.greyjoy.active,
button.placing:hover, button.placing:focus, .button.placing:hover, .button.placing:focus, .button.placing.active {
	background-color: #111;
}
button.greyjoy:hover, button.greyjoy:focus, .button.greyjoy:hover, .button.greyjoy:focus, .button.greyjoy.active,
button.placing:hover, button.placing:focus, .button.placing:hover, .button.placing:focus, .button.placing.active {
	color: white;
}

button.baratheon, .button.baratheon, button.consolidate, .button.consolidate {
	background-color: #E6A71C;
	border: none;/*#DF9C17;*/
	color: black;
}
button.baratheon:hover, button.baratheon:focus, .button.baratheon:hover, .button.baratheon:focus, .button.baratheon.active,
button.consolidate:hover, button.consolidate:focus, .button.consolidate:hover, .button.consolidate:focus, .button.consolidate.active {
	background-color: #C27501;/*#DF9C17;*/
}
button.baratheon:hover, button.baratheon:focus, .button.baratheon:hover, .button.baratheon:focus, .button.baratheon.active,
button.consolidate:hover, button.consolidate:focus, .button.consolidate:hover, .button.consolidate:focus, .button.consolidate.active {
	color: black;
}

button.stark, .button.stark, button.wildlings, .button.wildlings {
	background-color: #e9e9e9;
	border: none;
	color: #111111;
}
button.stark:hover, button.stark:focus, .button.stark:hover, .button.stark:focus, .button.stark.active,
button.wildlings:hover, button.wildlings:focus, .button.wildlings:hover, .button.wildlings:focus, .button.wildlings.active {
  background-color: #d0d0d0;
}
button.stark:hover, button.stark:focus, .button.stark:hover, .button.stark:focus, .button.stark.active,
button.wildlings:hover, button.wildlings:focus, .button.wildlings:hover, .button.wildlings:focus, .button.wildlings.active {
  color: #111111;
}

button.tyrell, .button.tyrell, button.mustering, .button.mustering {
	background-color: #5da423;
	border: none;
	color: white;
}
button.tyrell:hover, button.tyrell:focus, .button.tyrell:hover, .button.tyrell:focus, .button.tyrell.active,
button.mustering:hover, button.mustering:focus, .button.mustering:hover, .button.mustering:focus, .button.mustering.active {
  background-color: #457a1a;
}
button.tyrell:hover, button.tyrell:focus, .button.tyrell:hover, .button.tyrell:focus, .button.tyrell.active,
button.mustering:hover, button.mustering:focus, .button.mustering:hover, .button.mustering:focus, .button.mustering.active {
  color: white;
}

button.lannister, .button.lannister, button.bidding, .button.bidding {
	background-color: #c60f13;
	border: none; /*#970b0e;*/
	color: white;
}
button.lannister:hover, button.lannister:focus, .button.lannister:hover, .button.lannister:focus, .button.lannister.active,
button.bidding:hover, button.bidding:focus, .button.bidding:hover, .button.bidding:focus, .button.bidding.active {
  background-color: #951919;
}
button.lannister:hover, button.lannister:focus, .button.lannister:hover, .button.lannister:focus, .button.lannister.active,
button.bidding:hover, button.bidding:focus, .button.bidding:hover, .button.bidding:focus, .button.bidding.active {
  color: white;
}

.active .current {
	font-weight: bold;
	font-size: 24px;
    -webkit-transition: all 0.25s ease;
    -moz-transition: all 0.25s ease;
    -o-transition: all 0.25s ease;
    transition: all 0.25s ease;
}

button {
	margin: 2px 0 0 0;
}
button span {
	font-size: 14px;
	font-weight: normal;
}
.time-label {
	display: inline-block;
	text-align: right !important;
	width: 32px;
	font-style: italic;
	font-size: 10px !important;
}




* {margin: 0; padding: 0;}

.timer {
	padding: 10px;
	background: linear-gradient(top, #222, #444);
	overflow: hidden;
	display: inline-block;
	border: 7px solid #efefef;
	border-radius: 5px;
	position: relative;
	
	box-shadow: 
		inset 0 -2px 10px 1px rgba(0, 0, 0, 0.75), 
		0 5px 20px -10px rgba(0, 0, 0, 1);
}

.cell {
	/*Should only display 1 digit. Hence height = line height of .numbers
	and width = width of .numbers*/
	width: 0.60em;
	height: 40px;
	font-size: 50px;
	overflow: hidden;
	position: relative;
	float: left;
}

.numbers {
	width: 0.6em;
	line-height: 40px;
	font-family: digital, arial, verdana;
	text-align: center;
	color: #111;
	
	position: absolute;
	top: 0;
	left: 0;
	
	/*Glow to the text*/
	text-shadow: 0 0 5px rgba(255, 255, 255, 1);
}

/*Styles for the controls*/
#timer_controls {
	width: 140px;
	margin: 0 auto;
	margin-top: -5px;
}
#timer_controls label {
	cursor: pointer;
	padding: 5px 10px;
	background: #efefef;
	font-family: arial, verdana, tahoma;
	font-size: 11px;
	border-radius: 0 0 3px 3px;
}
input[name="controls"] {display: none;}

/*Control code*/
#stop:checked~.timer .numbers {animation-play-state: paused;}
#start:checked~.timer .numbers {animation-play-state: running;}
#reset:checked~.timer .numbers {animation: none;}

.moveten {
	/*The digits move but dont look good. We will use steps now
	10 digits = 10 steps. You can now see the digits swapping instead of 
	moving pixel-by-pixel*/
	animation: moveten 1s steps(10, end) infinite;
	/*By default animation should be paused*/
	animation-play-state: paused;
}
.movesix {
	animation: movesix 1s steps(6, end) infinite;
	animation-play-state: paused;
}

/*Now we need to sync the animation speed with time speed*/
/*One second per digit. 10 digits. Hence 10s*/
.second {animation-duration: 10s;}
.tensecond {animation-duration: 60s;} /*60 times .second*/

.milisecond {animation-duration: 1s;} /*1/10th of .second*/
.tenmilisecond {animation-duration: 0.1s;}
.hundredmilisecond {animation-duration: 0.01s;}

.minute {animation-duration: 600s;} /*60 times .second*/
.tenminute {animation-duration: 3600s;} /*60 times .minute*/

.hour {animation-duration: 36000s;} /*60 times .minute*/
.tenhour {animation-duration: 360000s;} /*10 times .hour*/

/*The stopwatch looks good now. Lets add some styles*/

/*Lets animate the digit now - the main part of this tutorial*/
/*We are using prefixfree, so no need of vendor prefixes*/
/*The logic of the animation is to alter the 'top' value of the absolutely
positioned .numbers*/
/*Minutes and Seconds should be limited to only '60' and not '100'
Hence we need to create 2 animations. One with 10 steps and 10 digits and
the other one with 6 steps and 6 digits*/
@keyframes moveten {
	0% {top: 0;}
	100% {top: -400px;} 
	/*height = 40. digits = 10. hence -400 to move it completely to the top*/
}

@keyframes movesix {
	0% {top: 0;}
	100% {top: -240px;} 
	/*height = 40. digits = 6. hence -240 to move it completely to the top*/
}


/*Lets use a better font for the numbers*/
@font-face {
	font-family: 'digital';
	src: url('http://thecodeplayer.com/uploads/fonts/DS-DIGI.TTF');
	
}